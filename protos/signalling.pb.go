// Code generated by protoc-gen-go. DO NOT EDIT.
// source: signalling.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ICECredentialType int32

const (
	ICECredentialType_NONE     ICECredentialType = 0
	ICECredentialType_PASSWORD ICECredentialType = 1
	ICECredentialType_OAUTH    ICECredentialType = 2
)

var ICECredentialType_name = map[int32]string{
	0: "NONE",
	1: "PASSWORD",
	2: "OAUTH",
}

var ICECredentialType_value = map[string]int32{
	"NONE":     0,
	"PASSWORD": 1,
	"OAUTH":    2,
}

func (x ICECredentialType) String() string {
	return proto.EnumName(ICECredentialType_name, int32(x))
}

func (ICECredentialType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{0}
}

type SDPTypes int32

const (
	SDPTypes_Offer    SDPTypes = 0
	SDPTypes_Answer   SDPTypes = 1
	SDPTypes_Pranswer SDPTypes = 2
	SDPTypes_Rollback SDPTypes = 3
)

var SDPTypes_name = map[int32]string{
	0: "Offer",
	1: "Answer",
	2: "Pranswer",
	3: "Rollback",
}

var SDPTypes_value = map[string]int32{
	"Offer":    0,
	"Answer":   1,
	"Pranswer": 2,
	"Rollback": 3,
}

func (x SDPTypes) String() string {
	return proto.EnumName(SDPTypes_name, int32(x))
}

func (SDPTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{1}
}

type RoomEvents int32

const (
	RoomEvents_UserLeftRoom       RoomEvents = 0
	RoomEvents_UserJoinedRoom     RoomEvents = 1
	RoomEvents_RoomCreated        RoomEvents = 2
	RoomEvents_RoomProfileUpdated RoomEvents = 3
	RoomEvents_RoomDestroyed      RoomEvents = 4
	RoomEvents_UserRegistered     RoomEvents = 5
	RoomEvents_UserProfileUpdated RoomEvents = 6
	RoomEvents_UserRemoved        RoomEvents = 7
)

var RoomEvents_name = map[int32]string{
	0: "UserLeftRoom",
	1: "UserJoinedRoom",
	2: "RoomCreated",
	3: "RoomProfileUpdated",
	4: "RoomDestroyed",
	5: "UserRegistered",
	6: "UserProfileUpdated",
	7: "UserRemoved",
}

var RoomEvents_value = map[string]int32{
	"UserLeftRoom":       0,
	"UserJoinedRoom":     1,
	"RoomCreated":        2,
	"RoomProfileUpdated": 3,
	"RoomDestroyed":      4,
	"UserRegistered":     5,
	"UserProfileUpdated": 6,
	"UserRemoved":        7,
}

func (x RoomEvents) String() string {
	return proto.EnumName(RoomEvents_name, int32(x))
}

func (RoomEvents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{2}
}

type NewUserParam struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserParam) Reset()         { *m = NewUserParam{} }
func (m *NewUserParam) String() string { return proto.CompactTextString(m) }
func (*NewUserParam) ProtoMessage()    {}
func (*NewUserParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{0}
}

func (m *NewUserParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserParam.Unmarshal(m, b)
}
func (m *NewUserParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserParam.Marshal(b, m, deterministic)
}
func (m *NewUserParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserParam.Merge(m, src)
}
func (m *NewUserParam) XXX_Size() int {
	return xxx_messageInfo_NewUserParam.Size(m)
}
func (m *NewUserParam) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserParam.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserParam proto.InternalMessageInfo

func (m *NewUserParam) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewUserParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewUserParam) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

type GetUserParam struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserParam) Reset()         { *m = GetUserParam{} }
func (m *GetUserParam) String() string { return proto.CompactTextString(m) }
func (*GetUserParam) ProtoMessage()    {}
func (*GetUserParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{1}
}

func (m *GetUserParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserParam.Unmarshal(m, b)
}
func (m *GetUserParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserParam.Marshal(b, m, deterministic)
}
func (m *GetUserParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserParam.Merge(m, src)
}
func (m *GetUserParam) XXX_Size() int {
	return xxx_messageInfo_GetUserParam.Size(m)
}
func (m *GetUserParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserParam proto.InternalMessageInfo

func (m *GetUserParam) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	Online               bool     `protobuf:"varint,4,opt,name=online,proto3" json:"online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *User) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

type OnlineStatus struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Online               bool     `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnlineStatus) Reset()         { *m = OnlineStatus{} }
func (m *OnlineStatus) String() string { return proto.CompactTextString(m) }
func (*OnlineStatus) ProtoMessage()    {}
func (*OnlineStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{3}
}

func (m *OnlineStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnlineStatus.Unmarshal(m, b)
}
func (m *OnlineStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnlineStatus.Marshal(b, m, deterministic)
}
func (m *OnlineStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnlineStatus.Merge(m, src)
}
func (m *OnlineStatus) XXX_Size() int {
	return xxx_messageInfo_OnlineStatus.Size(m)
}
func (m *OnlineStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_OnlineStatus.DiscardUnknown(m)
}

var xxx_messageInfo_OnlineStatus proto.InternalMessageInfo

func (m *OnlineStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OnlineStatus) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

type Heartbeat struct {
	Beat                 bool     `protobuf:"varint,2,opt,name=beat,proto3" json:"beat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{4}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetBeat() bool {
	if m != nil {
		return m.Beat
	}
	return false
}

type Users struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Users) Reset()         { *m = Users{} }
func (m *Users) String() string { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()    {}
func (*Users) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{5}
}

func (m *Users) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Users.Unmarshal(m, b)
}
func (m *Users) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Users.Marshal(b, m, deterministic)
}
func (m *Users) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Users.Merge(m, src)
}
func (m *Users) XXX_Size() int {
	return xxx_messageInfo_Users.Size(m)
}
func (m *Users) XXX_DiscardUnknown() {
	xxx_messageInfo_Users.DiscardUnknown(m)
}

var xxx_messageInfo_Users proto.InternalMessageInfo

func (m *Users) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Users) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type UpdateUserProfileParam struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserProfileParam) Reset()         { *m = UpdateUserProfileParam{} }
func (m *UpdateUserProfileParam) String() string { return proto.CompactTextString(m) }
func (*UpdateUserProfileParam) ProtoMessage()    {}
func (*UpdateUserProfileParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{6}
}

func (m *UpdateUserProfileParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserProfileParam.Unmarshal(m, b)
}
func (m *UpdateUserProfileParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserProfileParam.Marshal(b, m, deterministic)
}
func (m *UpdateUserProfileParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserProfileParam.Merge(m, src)
}
func (m *UpdateUserProfileParam) XXX_Size() int {
	return xxx_messageInfo_UpdateUserProfileParam.Size(m)
}
func (m *UpdateUserProfileParam) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserProfileParam.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserProfileParam proto.InternalMessageInfo

func (m *UpdateUserProfileParam) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateUserProfileParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateUserProfileParam) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

type UpdateProfileParam struct {
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateProfileParam) Reset()         { *m = UpdateProfileParam{} }
func (m *UpdateProfileParam) String() string { return proto.CompactTextString(m) }
func (*UpdateProfileParam) ProtoMessage()    {}
func (*UpdateProfileParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{7}
}

func (m *UpdateProfileParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProfileParam.Unmarshal(m, b)
}
func (m *UpdateProfileParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProfileParam.Marshal(b, m, deterministic)
}
func (m *UpdateProfileParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProfileParam.Merge(m, src)
}
func (m *UpdateProfileParam) XXX_Size() int {
	return xxx_messageInfo_UpdateProfileParam.Size(m)
}
func (m *UpdateProfileParam) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProfileParam.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProfileParam proto.InternalMessageInfo

func (m *UpdateProfileParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateProfileParam) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

type Profile struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string       `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	Servers              []*ICEServer `protobuf:"bytes,4,rep,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{8}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *Profile) GetServers() []*ICEServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

type ICEServer struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Username             string            `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	CredentialType       ICECredentialType `protobuf:"varint,3,opt,name=credentialType,proto3,enum=protos.ICECredentialType" json:"credentialType,omitempty"`
	Password             string            `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	AccessToken          string            `protobuf:"bytes,5,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	MacKey               string            `protobuf:"bytes,6,opt,name=macKey,proto3" json:"macKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ICEServer) Reset()         { *m = ICEServer{} }
func (m *ICEServer) String() string { return proto.CompactTextString(m) }
func (*ICEServer) ProtoMessage()    {}
func (*ICEServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{9}
}

func (m *ICEServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICEServer.Unmarshal(m, b)
}
func (m *ICEServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICEServer.Marshal(b, m, deterministic)
}
func (m *ICEServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICEServer.Merge(m, src)
}
func (m *ICEServer) XXX_Size() int {
	return xxx_messageInfo_ICEServer.Size(m)
}
func (m *ICEServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ICEServer.DiscardUnknown(m)
}

var xxx_messageInfo_ICEServer proto.InternalMessageInfo

func (m *ICEServer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ICEServer) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ICEServer) GetCredentialType() ICECredentialType {
	if m != nil {
		return m.CredentialType
	}
	return ICECredentialType_NONE
}

func (m *ICEServer) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ICEServer) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *ICEServer) GetMacKey() string {
	if m != nil {
		return m.MacKey
	}
	return ""
}

type UserAccessToken struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAccessToken) Reset()         { *m = UserAccessToken{} }
func (m *UserAccessToken) String() string { return proto.CompactTextString(m) }
func (*UserAccessToken) ProtoMessage()    {}
func (*UserAccessToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{10}
}

func (m *UserAccessToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAccessToken.Unmarshal(m, b)
}
func (m *UserAccessToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAccessToken.Marshal(b, m, deterministic)
}
func (m *UserAccessToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAccessToken.Merge(m, src)
}
func (m *UserAccessToken) XXX_Size() int {
	return xxx_messageInfo_UserAccessToken.Size(m)
}
func (m *UserAccessToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAccessToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserAccessToken proto.InternalMessageInfo

func (m *UserAccessToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type NewRoomParam struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	UserIDs              []string `protobuf:"bytes,5,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRoomParam) Reset()         { *m = NewRoomParam{} }
func (m *NewRoomParam) String() string { return proto.CompactTextString(m) }
func (*NewRoomParam) ProtoMessage()    {}
func (*NewRoomParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{11}
}

func (m *NewRoomParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRoomParam.Unmarshal(m, b)
}
func (m *NewRoomParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRoomParam.Marshal(b, m, deterministic)
}
func (m *NewRoomParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRoomParam.Merge(m, src)
}
func (m *NewRoomParam) XXX_Size() int {
	return xxx_messageInfo_NewRoomParam.Size(m)
}
func (m *NewRoomParam) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRoomParam.DiscardUnknown(m)
}

var xxx_messageInfo_NewRoomParam proto.InternalMessageInfo

func (m *NewRoomParam) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NewRoomParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NewRoomParam) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *NewRoomParam) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NewRoomParam) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

type Room struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Users                []*User  `protobuf:"bytes,5,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{12}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Room) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *Room) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Room) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type UpdateRoomProfileParam struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRoomProfileParam) Reset()         { *m = UpdateRoomProfileParam{} }
func (m *UpdateRoomProfileParam) String() string { return proto.CompactTextString(m) }
func (*UpdateRoomProfileParam) ProtoMessage()    {}
func (*UpdateRoomProfileParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{13}
}

func (m *UpdateRoomProfileParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRoomProfileParam.Unmarshal(m, b)
}
func (m *UpdateRoomProfileParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRoomProfileParam.Marshal(b, m, deterministic)
}
func (m *UpdateRoomProfileParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRoomProfileParam.Merge(m, src)
}
func (m *UpdateRoomProfileParam) XXX_Size() int {
	return xxx_messageInfo_UpdateRoomProfileParam.Size(m)
}
func (m *UpdateRoomProfileParam) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRoomProfileParam.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRoomProfileParam proto.InternalMessageInfo

func (m *UpdateRoomProfileParam) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRoomProfileParam) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRoomProfileParam) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *UpdateRoomProfileParam) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Rooms struct {
	Rooms                []*Room  `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rooms) Reset()         { *m = Rooms{} }
func (m *Rooms) String() string { return proto.CompactTextString(m) }
func (*Rooms) ProtoMessage()    {}
func (*Rooms) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{14}
}

func (m *Rooms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rooms.Unmarshal(m, b)
}
func (m *Rooms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rooms.Marshal(b, m, deterministic)
}
func (m *Rooms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rooms.Merge(m, src)
}
func (m *Rooms) XXX_Size() int {
	return xxx_messageInfo_Rooms.Size(m)
}
func (m *Rooms) XXX_DiscardUnknown() {
	xxx_messageInfo_Rooms.DiscardUnknown(m)
}

var xxx_messageInfo_Rooms proto.InternalMessageInfo

func (m *Rooms) GetRooms() []*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *Rooms) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type UserRoomParam struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RoomID               string   `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRoomParam) Reset()         { *m = UserRoomParam{} }
func (m *UserRoomParam) String() string { return proto.CompactTextString(m) }
func (*UserRoomParam) ProtoMessage()    {}
func (*UserRoomParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{15}
}

func (m *UserRoomParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRoomParam.Unmarshal(m, b)
}
func (m *UserRoomParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRoomParam.Marshal(b, m, deterministic)
}
func (m *UserRoomParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRoomParam.Merge(m, src)
}
func (m *UserRoomParam) XXX_Size() int {
	return xxx_messageInfo_UserRoomParam.Size(m)
}
func (m *UserRoomParam) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRoomParam.DiscardUnknown(m)
}

var xxx_messageInfo_UserRoomParam proto.InternalMessageInfo

func (m *UserRoomParam) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserRoomParam) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type GetRoomParam struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomParam) Reset()         { *m = GetRoomParam{} }
func (m *GetRoomParam) String() string { return proto.CompactTextString(m) }
func (*GetRoomParam) ProtoMessage()    {}
func (*GetRoomParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{16}
}

func (m *GetRoomParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomParam.Unmarshal(m, b)
}
func (m *GetRoomParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomParam.Marshal(b, m, deterministic)
}
func (m *GetRoomParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomParam.Merge(m, src)
}
func (m *GetRoomParam) XXX_Size() int {
	return xxx_messageInfo_GetRoomParam.Size(m)
}
func (m *GetRoomParam) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomParam.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomParam proto.InternalMessageInfo

func (m *GetRoomParam) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PaginationParam struct {
	Offset               int32    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword              string   `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaginationParam) Reset()         { *m = PaginationParam{} }
func (m *PaginationParam) String() string { return proto.CompactTextString(m) }
func (*PaginationParam) ProtoMessage()    {}
func (*PaginationParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{17}
}

func (m *PaginationParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationParam.Unmarshal(m, b)
}
func (m *PaginationParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationParam.Marshal(b, m, deterministic)
}
func (m *PaginationParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationParam.Merge(m, src)
}
func (m *PaginationParam) XXX_Size() int {
	return xxx_messageInfo_PaginationParam.Size(m)
}
func (m *PaginationParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationParam.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationParam proto.InternalMessageInfo

func (m *PaginationParam) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PaginationParam) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PaginationParam) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type SDPParam struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDPParam) Reset()         { *m = SDPParam{} }
func (m *SDPParam) String() string { return proto.CompactTextString(m) }
func (*SDPParam) ProtoMessage()    {}
func (*SDPParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{18}
}

func (m *SDPParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDPParam.Unmarshal(m, b)
}
func (m *SDPParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDPParam.Marshal(b, m, deterministic)
}
func (m *SDPParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDPParam.Merge(m, src)
}
func (m *SDPParam) XXX_Size() int {
	return xxx_messageInfo_SDPParam.Size(m)
}
func (m *SDPParam) XXX_DiscardUnknown() {
	xxx_messageInfo_SDPParam.DiscardUnknown(m)
}

var xxx_messageInfo_SDPParam proto.InternalMessageInfo

func (m *SDPParam) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SDPParam) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type SDP struct {
	Type                 SDPTypes `protobuf:"varint,1,opt,name=type,proto3,enum=protos.SDPTypes" json:"type,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	SenderID             string   `protobuf:"bytes,3,opt,name=senderID,proto3" json:"senderID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SDP) Reset()         { *m = SDP{} }
func (m *SDP) String() string { return proto.CompactTextString(m) }
func (*SDP) ProtoMessage()    {}
func (*SDP) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{19}
}

func (m *SDP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SDP.Unmarshal(m, b)
}
func (m *SDP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SDP.Marshal(b, m, deterministic)
}
func (m *SDP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SDP.Merge(m, src)
}
func (m *SDP) XXX_Size() int {
	return xxx_messageInfo_SDP.Size(m)
}
func (m *SDP) XXX_DiscardUnknown() {
	xxx_messageInfo_SDP.DiscardUnknown(m)
}

var xxx_messageInfo_SDP proto.InternalMessageInfo

func (m *SDP) GetType() SDPTypes {
	if m != nil {
		return m.Type
	}
	return SDPTypes_Offer
}

func (m *SDP) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SDP) GetSenderID() string {
	if m != nil {
		return m.SenderID
	}
	return ""
}

type RoomEvent struct {
	Event RoomEvents           `protobuf:"varint,1,opt,name=event,proto3,enum=protos.RoomEvents" json:"event,omitempty"`
	Time  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Types that are valid to be assigned to Payload:
	//	*RoomEvent_RoomParticipant
	//	*RoomEvent_RoomInstance
	//	*RoomEvent_UserInstance
	Payload              isRoomEvent_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RoomEvent) Reset()         { *m = RoomEvent{} }
func (m *RoomEvent) String() string { return proto.CompactTextString(m) }
func (*RoomEvent) ProtoMessage()    {}
func (*RoomEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{20}
}

func (m *RoomEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomEvent.Unmarshal(m, b)
}
func (m *RoomEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomEvent.Marshal(b, m, deterministic)
}
func (m *RoomEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomEvent.Merge(m, src)
}
func (m *RoomEvent) XXX_Size() int {
	return xxx_messageInfo_RoomEvent.Size(m)
}
func (m *RoomEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RoomEvent proto.InternalMessageInfo

func (m *RoomEvent) GetEvent() RoomEvents {
	if m != nil {
		return m.Event
	}
	return RoomEvents_UserLeftRoom
}

func (m *RoomEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type isRoomEvent_Payload interface {
	isRoomEvent_Payload()
}

type RoomEvent_RoomParticipant struct {
	RoomParticipant *RoomParticipantEventPayload `protobuf:"bytes,4,opt,name=roomParticipant,proto3,oneof"`
}

type RoomEvent_RoomInstance struct {
	RoomInstance *RoomInstanceEventPayload `protobuf:"bytes,5,opt,name=roomInstance,proto3,oneof"`
}

type RoomEvent_UserInstance struct {
	UserInstance *UserInstanceEventPayload `protobuf:"bytes,6,opt,name=userInstance,proto3,oneof"`
}

func (*RoomEvent_RoomParticipant) isRoomEvent_Payload() {}

func (*RoomEvent_RoomInstance) isRoomEvent_Payload() {}

func (*RoomEvent_UserInstance) isRoomEvent_Payload() {}

func (m *RoomEvent) GetPayload() isRoomEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *RoomEvent) GetRoomParticipant() *RoomParticipantEventPayload {
	if x, ok := m.GetPayload().(*RoomEvent_RoomParticipant); ok {
		return x.RoomParticipant
	}
	return nil
}

func (m *RoomEvent) GetRoomInstance() *RoomInstanceEventPayload {
	if x, ok := m.GetPayload().(*RoomEvent_RoomInstance); ok {
		return x.RoomInstance
	}
	return nil
}

func (m *RoomEvent) GetUserInstance() *UserInstanceEventPayload {
	if x, ok := m.GetPayload().(*RoomEvent_UserInstance); ok {
		return x.UserInstance
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RoomEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RoomEvent_RoomParticipant)(nil),
		(*RoomEvent_RoomInstance)(nil),
		(*RoomEvent_UserInstance)(nil),
	}
}

type RoomParticipantEventPayload struct {
	ParticipantID        string   `protobuf:"bytes,1,opt,name=participantID,proto3" json:"participantID,omitempty"`
	RoomID               string   `protobuf:"bytes,2,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomParticipantEventPayload) Reset()         { *m = RoomParticipantEventPayload{} }
func (m *RoomParticipantEventPayload) String() string { return proto.CompactTextString(m) }
func (*RoomParticipantEventPayload) ProtoMessage()    {}
func (*RoomParticipantEventPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{21}
}

func (m *RoomParticipantEventPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomParticipantEventPayload.Unmarshal(m, b)
}
func (m *RoomParticipantEventPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomParticipantEventPayload.Marshal(b, m, deterministic)
}
func (m *RoomParticipantEventPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomParticipantEventPayload.Merge(m, src)
}
func (m *RoomParticipantEventPayload) XXX_Size() int {
	return xxx_messageInfo_RoomParticipantEventPayload.Size(m)
}
func (m *RoomParticipantEventPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomParticipantEventPayload.DiscardUnknown(m)
}

var xxx_messageInfo_RoomParticipantEventPayload proto.InternalMessageInfo

func (m *RoomParticipantEventPayload) GetParticipantID() string {
	if m != nil {
		return m.ParticipantID
	}
	return ""
}

func (m *RoomParticipantEventPayload) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type RoomInstanceEventPayload struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomInstanceEventPayload) Reset()         { *m = RoomInstanceEventPayload{} }
func (m *RoomInstanceEventPayload) String() string { return proto.CompactTextString(m) }
func (*RoomInstanceEventPayload) ProtoMessage()    {}
func (*RoomInstanceEventPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{22}
}

func (m *RoomInstanceEventPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomInstanceEventPayload.Unmarshal(m, b)
}
func (m *RoomInstanceEventPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomInstanceEventPayload.Marshal(b, m, deterministic)
}
func (m *RoomInstanceEventPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomInstanceEventPayload.Merge(m, src)
}
func (m *RoomInstanceEventPayload) XXX_Size() int {
	return xxx_messageInfo_RoomInstanceEventPayload.Size(m)
}
func (m *RoomInstanceEventPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomInstanceEventPayload.DiscardUnknown(m)
}

var xxx_messageInfo_RoomInstanceEventPayload proto.InternalMessageInfo

func (m *RoomInstanceEventPayload) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoomInstanceEventPayload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RoomInstanceEventPayload) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

func (m *RoomInstanceEventPayload) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UserInstanceEventPayload struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Photo                string   `protobuf:"bytes,3,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInstanceEventPayload) Reset()         { *m = UserInstanceEventPayload{} }
func (m *UserInstanceEventPayload) String() string { return proto.CompactTextString(m) }
func (*UserInstanceEventPayload) ProtoMessage()    {}
func (*UserInstanceEventPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{23}
}

func (m *UserInstanceEventPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInstanceEventPayload.Unmarshal(m, b)
}
func (m *UserInstanceEventPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInstanceEventPayload.Marshal(b, m, deterministic)
}
func (m *UserInstanceEventPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInstanceEventPayload.Merge(m, src)
}
func (m *UserInstanceEventPayload) XXX_Size() int {
	return xxx_messageInfo_UserInstanceEventPayload.Size(m)
}
func (m *UserInstanceEventPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInstanceEventPayload.DiscardUnknown(m)
}

var xxx_messageInfo_UserInstanceEventPayload proto.InternalMessageInfo

func (m *UserInstanceEventPayload) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserInstanceEventPayload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInstanceEventPayload) GetPhoto() string {
	if m != nil {
		return m.Photo
	}
	return ""
}

type ICEParam struct {
	Candidate            string   `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	IsRemote             bool     `protobuf:"varint,3,opt,name=isRemote,proto3" json:"isRemote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICEParam) Reset()         { *m = ICEParam{} }
func (m *ICEParam) String() string { return proto.CompactTextString(m) }
func (*ICEParam) ProtoMessage()    {}
func (*ICEParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{24}
}

func (m *ICEParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICEParam.Unmarshal(m, b)
}
func (m *ICEParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICEParam.Marshal(b, m, deterministic)
}
func (m *ICEParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICEParam.Merge(m, src)
}
func (m *ICEParam) XXX_Size() int {
	return xxx_messageInfo_ICEParam.Size(m)
}
func (m *ICEParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ICEParam.DiscardUnknown(m)
}

var xxx_messageInfo_ICEParam proto.InternalMessageInfo

func (m *ICEParam) GetCandidate() string {
	if m != nil {
		return m.Candidate
	}
	return ""
}

func (m *ICEParam) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ICEParam) GetIsRemote() bool {
	if m != nil {
		return m.IsRemote
	}
	return false
}

type ICEOffer struct {
	Candidate            string   `protobuf:"bytes,1,opt,name=candidate,proto3" json:"candidate,omitempty"`
	SenderID             string   `protobuf:"bytes,2,opt,name=senderID,proto3" json:"senderID,omitempty"`
	IsRemote             bool     `protobuf:"varint,3,opt,name=isRemote,proto3" json:"isRemote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICEOffer) Reset()         { *m = ICEOffer{} }
func (m *ICEOffer) String() string { return proto.CompactTextString(m) }
func (*ICEOffer) ProtoMessage()    {}
func (*ICEOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_39f66308029891ad, []int{25}
}

func (m *ICEOffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICEOffer.Unmarshal(m, b)
}
func (m *ICEOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICEOffer.Marshal(b, m, deterministic)
}
func (m *ICEOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICEOffer.Merge(m, src)
}
func (m *ICEOffer) XXX_Size() int {
	return xxx_messageInfo_ICEOffer.Size(m)
}
func (m *ICEOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_ICEOffer.DiscardUnknown(m)
}

var xxx_messageInfo_ICEOffer proto.InternalMessageInfo

func (m *ICEOffer) GetCandidate() string {
	if m != nil {
		return m.Candidate
	}
	return ""
}

func (m *ICEOffer) GetSenderID() string {
	if m != nil {
		return m.SenderID
	}
	return ""
}

func (m *ICEOffer) GetIsRemote() bool {
	if m != nil {
		return m.IsRemote
	}
	return false
}

func init() {
	proto.RegisterEnum("protos.ICECredentialType", ICECredentialType_name, ICECredentialType_value)
	proto.RegisterEnum("protos.SDPTypes", SDPTypes_name, SDPTypes_value)
	proto.RegisterEnum("protos.RoomEvents", RoomEvents_name, RoomEvents_value)
	proto.RegisterType((*NewUserParam)(nil), "protos.NewUserParam")
	proto.RegisterType((*GetUserParam)(nil), "protos.GetUserParam")
	proto.RegisterType((*User)(nil), "protos.User")
	proto.RegisterType((*OnlineStatus)(nil), "protos.OnlineStatus")
	proto.RegisterType((*Heartbeat)(nil), "protos.Heartbeat")
	proto.RegisterType((*Users)(nil), "protos.Users")
	proto.RegisterType((*UpdateUserProfileParam)(nil), "protos.UpdateUserProfileParam")
	proto.RegisterType((*UpdateProfileParam)(nil), "protos.UpdateProfileParam")
	proto.RegisterType((*Profile)(nil), "protos.Profile")
	proto.RegisterType((*ICEServer)(nil), "protos.ICEServer")
	proto.RegisterType((*UserAccessToken)(nil), "protos.UserAccessToken")
	proto.RegisterType((*NewRoomParam)(nil), "protos.NewRoomParam")
	proto.RegisterType((*Room)(nil), "protos.Room")
	proto.RegisterType((*UpdateRoomProfileParam)(nil), "protos.UpdateRoomProfileParam")
	proto.RegisterType((*Rooms)(nil), "protos.Rooms")
	proto.RegisterType((*UserRoomParam)(nil), "protos.UserRoomParam")
	proto.RegisterType((*GetRoomParam)(nil), "protos.GetRoomParam")
	proto.RegisterType((*PaginationParam)(nil), "protos.PaginationParam")
	proto.RegisterType((*SDPParam)(nil), "protos.SDPParam")
	proto.RegisterType((*SDP)(nil), "protos.SDP")
	proto.RegisterType((*RoomEvent)(nil), "protos.RoomEvent")
	proto.RegisterType((*RoomParticipantEventPayload)(nil), "protos.RoomParticipantEventPayload")
	proto.RegisterType((*RoomInstanceEventPayload)(nil), "protos.RoomInstanceEventPayload")
	proto.RegisterType((*UserInstanceEventPayload)(nil), "protos.UserInstanceEventPayload")
	proto.RegisterType((*ICEParam)(nil), "protos.ICEParam")
	proto.RegisterType((*ICEOffer)(nil), "protos.ICEOffer")
}

func init() { proto.RegisterFile("signalling.proto", fileDescriptor_39f66308029891ad) }

var fileDescriptor_39f66308029891ad = []byte{
	// 1405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdf, 0x6e, 0xdb, 0x36,
	0x17, 0xb7, 0x6c, 0xcb, 0xb1, 0x8f, 0x9d, 0x44, 0xe1, 0xd7, 0xa6, 0xfe, 0xdc, 0xa1, 0x0d, 0xb8,
	0x02, 0x0b, 0x3a, 0x20, 0x2d, 0xdc, 0xae, 0xc3, 0x2e, 0x96, 0xc1, 0xb3, 0x9d, 0x26, 0xeb, 0xda,
	0x18, 0x72, 0x82, 0x6d, 0xd8, 0x2e, 0xc6, 0x58, 0xb4, 0x27, 0xc4, 0x12, 0x0d, 0x91, 0x49, 0xe1,
	0xfb, 0x61, 0x7b, 0x98, 0x3d, 0xcd, 0xf6, 0x3c, 0xbb, 0x18, 0x48, 0x4a, 0x32, 0x65, 0x47, 0x4d,
	0xb3, 0xac, 0x57, 0xe6, 0xe1, 0xf9, 0xcb, 0xdf, 0xe1, 0xe1, 0x39, 0x32, 0x38, 0xdc, 0x9f, 0x84,
	0x64, 0x3a, 0xf5, 0xc3, 0xc9, 0xde, 0x2c, 0x62, 0x82, 0xa1, 0x8a, 0xfa, 0xe1, 0xad, 0xfb, 0x13,
	0xc6, 0x26, 0x53, 0xfa, 0x44, 0x91, 0x67, 0x17, 0xe3, 0x27, 0x34, 0x98, 0x89, 0xb9, 0x16, 0x6a,
	0x3d, 0x5c, 0x66, 0x0a, 0x3f, 0xa0, 0x5c, 0x90, 0x60, 0xa6, 0x05, 0xf0, 0x21, 0x34, 0xde, 0xd0,
	0xb7, 0xa7, 0x9c, 0x46, 0x03, 0x12, 0x91, 0x00, 0x6d, 0x40, 0xd1, 0xf7, 0x9a, 0xd6, 0x8e, 0xb5,
	0x5b, 0x73, 0x8b, 0xbe, 0x87, 0x10, 0x94, 0x43, 0x12, 0xd0, 0x66, 0x51, 0xed, 0xa8, 0x35, 0xba,
	0x03, 0xf6, 0xec, 0x17, 0x26, 0x58, 0xb3, 0xa4, 0x36, 0x35, 0x81, 0x1f, 0x40, 0xe3, 0x25, 0x15,
	0xb9, 0x96, 0xf0, 0xf7, 0x50, 0x96, 0xcc, 0x7f, 0xef, 0x01, 0x6d, 0x43, 0x85, 0x85, 0x53, 0x3f,
	0xa4, 0xcd, 0xf2, 0x8e, 0xb5, 0x5b, 0x75, 0x63, 0x0a, 0xbf, 0x80, 0xc6, 0xb1, 0x5a, 0x0d, 0x05,
	0x11, 0x17, 0x7c, 0xc5, 0xc3, 0x42, 0xaf, 0x98, 0xd1, 0x7b, 0x08, 0xb5, 0x43, 0x4a, 0x22, 0x71,
	0x46, 0x89, 0x90, 0x61, 0xc8, 0xdf, 0x58, 0x44, 0xad, 0x71, 0x07, 0x6c, 0x19, 0x32, 0x47, 0x18,
	0xec, 0x0b, 0xb9, 0x68, 0x5a, 0x3b, 0xa5, 0xdd, 0x7a, 0xbb, 0xa1, 0xc1, 0xe3, 0x7b, 0x92, 0xeb,
	0x6a, 0x96, 0x8c, 0x79, 0xc4, 0x2e, 0x42, 0x6d, 0xa1, 0xec, 0x6a, 0x02, 0xbb, 0xb0, 0x7d, 0x3a,
	0xf3, 0x88, 0xa0, 0x0a, 0x98, 0x88, 0x8d, 0xfd, 0x29, 0xbd, 0x2d, 0xd2, 0xfb, 0x80, 0xb4, 0xcd,
	0x8c, 0xbd, 0xf7, 0xd7, 0x9f, 0xc1, 0x5a, 0xac, 0x79, 0x8b, 0x64, 0x7c, 0x0a, 0x6b, 0x9c, 0x46,
	0x97, 0x12, 0x94, 0xb2, 0x02, 0x65, 0x2b, 0x01, 0xe5, 0xa8, 0xdb, 0x1f, 0x2a, 0x8e, 0x9b, 0x48,
	0xe0, 0xbf, 0x2c, 0xa8, 0xa5, 0xdb, 0xc8, 0x81, 0xd2, 0x45, 0x34, 0x8d, 0xbd, 0xca, 0x25, 0x6a,
	0x41, 0x55, 0x82, 0x68, 0xb8, 0x4e, 0x69, 0xd4, 0x81, 0x8d, 0x51, 0x44, 0x3d, 0x1a, 0x0a, 0x9f,
	0x4c, 0x4f, 0xe6, 0x33, 0xaa, 0xe2, 0xd8, 0x68, 0xff, 0xdf, 0xf0, 0xd7, 0xcd, 0x08, 0xb8, 0x4b,
	0x0a, 0xd2, 0xfc, 0x8c, 0x70, 0xfe, 0x96, 0x45, 0x9e, 0xba, 0x3a, 0x35, 0x37, 0xa5, 0xd1, 0x0e,
	0xd4, 0xc9, 0x68, 0x44, 0x39, 0x3f, 0x61, 0xe7, 0x34, 0x6c, 0xda, 0x8a, 0x6d, 0x6e, 0xc9, 0xeb,
	0x13, 0x90, 0xd1, 0x2b, 0x3a, 0x6f, 0x56, 0x14, 0x33, 0xa6, 0xf0, 0x27, 0xb0, 0x29, 0x93, 0xda,
	0x31, 0x44, 0xef, 0x80, 0x2d, 0x94, 0x19, 0x7d, 0x36, 0x4d, 0xe0, 0x5f, 0x2d, 0x55, 0x64, 0x2e,
	0x63, 0xc1, 0x2d, 0x53, 0x2f, 0xa3, 0xf5, 0x28, 0x1f, 0x45, 0xfe, 0x4c, 0xf8, 0x2c, 0x8c, 0x0f,
	0x63, 0x6e, 0xa1, 0x26, 0xac, 0x49, 0xe8, 0x8e, 0x7a, 0xbc, 0x69, 0xef, 0x94, 0x76, 0x6b, 0x6e,
	0x42, 0xe2, 0xdf, 0x2c, 0x28, 0xcb, 0x18, 0x3e, 0xa8, 0xfb, 0xb4, 0x52, 0xec, 0xdc, 0x4a, 0xc1,
	0x22, 0xa9, 0x09, 0x85, 0xc8, 0x7f, 0x52, 0x13, 0xd7, 0x47, 0x26, 0x8b, 0x59, 0xfa, 0x53, 0xc5,
	0x1c, 0xc9, 0xc5, 0x72, 0x31, 0x4b, 0xae, 0xab, 0x59, 0x39, 0xc5, 0xfc, 0x15, 0xac, 0xab, 0x73,
	0xa4, 0x89, 0xdc, 0x86, 0x8a, 0x46, 0x37, 0x8e, 0x39, 0xa6, 0xe4, 0xbe, 0xb4, 0x73, 0xd4, 0x8b,
	0x23, 0x8f, 0xa9, 0xf8, 0x8d, 0xcc, 0xbd, 0x08, 0xf8, 0x07, 0xd8, 0x1c, 0x90, 0x89, 0x1f, 0x12,
	0x19, 0x71, 0xea, 0x82, 0x8d, 0xc7, 0x9c, 0x0a, 0x25, 0x66, 0xbb, 0x31, 0x25, 0x23, 0x9c, 0xfa,
	0x81, 0xaf, 0x23, 0xb4, 0x5d, 0x4d, 0xc8, 0xec, 0x9f, 0xd3, 0xb9, 0xba, 0xe8, 0x1a, 0x9e, 0x84,
	0xc4, 0x3d, 0xa8, 0x0e, 0x7b, 0x03, 0x6d, 0x73, 0x09, 0x2c, 0x6b, 0x35, 0x8d, 0x8b, 0x83, 0x15,
	0xcd, 0x83, 0x61, 0x1f, 0x4a, 0xc3, 0xde, 0x00, 0x3d, 0x82, 0xb2, 0x90, 0x95, 0x68, 0xa9, 0x4a,
	0x74, 0x12, 0x04, 0x87, 0xbd, 0x81, 0xac, 0x37, 0xee, 0x2a, 0xee, 0xb2, 0x9b, 0xe2, 0xaa, 0x9b,
	0x16, 0x54, 0x39, 0x0d, 0x3d, 0xe5, 0x48, 0xc7, 0x9b, 0xd2, 0xf8, 0xcf, 0x22, 0xd4, 0x24, 0x52,
	0xfd, 0x4b, 0x1a, 0x0a, 0xb4, 0x0b, 0x36, 0x95, 0x8b, 0xd8, 0x25, 0x32, 0x93, 0xa6, 0x24, 0xb8,
	0xab, 0x05, 0xd0, 0x1e, 0x94, 0x65, 0x93, 0x53, 0xf6, 0xea, 0xed, 0xd6, 0x9e, 0xee, 0x80, 0x7b,
	0x49, 0x07, 0xdc, 0x3b, 0x49, 0x3a, 0xa0, 0xab, 0xe4, 0xd0, 0x31, 0x6c, 0x46, 0x3a, 0x21, 0xc2,
	0x1f, 0xf9, 0x33, 0x12, 0x0a, 0x75, 0x7b, 0xea, 0xed, 0x8f, 0x4d, 0x1f, 0x06, 0x5b, 0xb9, 0x1b,
	0x90, 0xf9, 0x94, 0x11, 0xef, 0xb0, 0xe0, 0x2e, 0x6b, 0xa3, 0x03, 0x68, 0xa8, 0x74, 0x87, 0x5c,
	0x90, 0x70, 0x44, 0xd5, 0x93, 0x52, 0x6f, 0xef, 0x98, 0xd6, 0x12, 0xde, 0x92, 0xa9, 0x8c, 0x9e,
	0xb4, 0xa3, 0x50, 0x4f, 0xec, 0x54, 0xb2, 0x76, 0x4e, 0x0d, 0xde, 0xb2, 0x1d, 0x53, 0xef, 0xeb,
	0x1a, 0xac, 0xcd, 0x34, 0x0b, 0xff, 0x08, 0xf7, 0xdf, 0x71, 0x18, 0xf4, 0x08, 0xd6, 0x67, 0x0b,
	0x56, 0x7a, 0xab, 0xb3, 0x9b, 0xb9, 0x97, 0xfb, 0x12, 0x9a, 0x79, 0x67, 0xfb, 0xa0, 0x85, 0x7d,
	0x02, 0xcd, 0x3c, 0x2c, 0x6e, 0xd1, 0x64, 0x7f, 0x82, 0xea, 0x51, 0xb7, 0xaf, 0xeb, 0xe5, 0x23,
	0xa8, 0x8d, 0x48, 0xe8, 0xf9, 0xf2, 0xcd, 0x8a, 0x8d, 0x2d, 0x36, 0xf2, 0x6a, 0x45, 0x5e, 0x6e,
	0x9f, 0xbb, 0x34, 0x60, 0x42, 0x5f, 0xc6, 0xaa, 0x9b, 0xd2, 0xf8, 0x67, 0x65, 0xfd, 0x78, 0x3c,
	0xa6, 0xd1, 0x35, 0xd6, 0xcd, 0x12, 0x29, 0x66, 0x4b, 0xe4, 0x5d, 0x1e, 0x1e, 0xbf, 0x80, 0xad,
	0x95, 0xc6, 0x88, 0xaa, 0x50, 0x7e, 0x73, 0xfc, 0xa6, 0xef, 0x14, 0x50, 0x03, 0xaa, 0x83, 0xce,
	0x70, 0xf8, 0xdd, 0xb1, 0xdb, 0x73, 0x2c, 0x54, 0x03, 0xfb, 0xb8, 0x73, 0x7a, 0x72, 0xe8, 0x14,
	0x1f, 0x7f, 0xa9, 0xde, 0x09, 0x55, 0xc6, 0x6a, 0x5b, 0x86, 0xe8, 0x14, 0x10, 0x40, 0xa5, 0x13,
	0xf2, 0xb7, 0x34, 0x72, 0x2c, 0xa5, 0x1b, 0x11, 0x4d, 0x15, 0x25, 0xe5, 0xb2, 0xe9, 0xf4, 0x8c,
	0x8c, 0xce, 0x9d, 0xd2, 0xe3, 0x3f, 0x2c, 0x80, 0x45, 0x4d, 0x22, 0x07, 0x1a, 0x32, 0x37, 0xdf,
	0xd2, 0xb1, 0x7a, 0xf5, 0x9c, 0x02, 0x42, 0xb0, 0x21, 0x77, 0xbe, 0x61, 0x7e, 0x48, 0x3d, 0xb5,
	0x67, 0xa1, 0x4d, 0xa8, 0xcb, 0x55, 0x37, 0xa2, 0x44, 0x50, 0xcf, 0x29, 0xa2, 0x6d, 0x40, 0x46,
	0x6f, 0xd0, 0xcd, 0xc2, 0x73, 0x4a, 0x68, 0x0b, 0xd6, 0xe5, 0x7e, 0x8f, 0x72, 0x11, 0xb1, 0x39,
	0xf5, 0x9c, 0x72, 0x62, 0xcf, 0xa5, 0x13, 0x9f, 0x0b, 0x1a, 0x51, 0xcf, 0xb1, 0xa5, 0xba, 0x31,
	0x6e, 0x25, 0xea, 0x15, 0xe9, 0x47, 0xcb, 0x06, 0xec, 0x92, 0x7a, 0xce, 0x5a, 0xfb, 0x6f, 0x1b,
	0xee, 0x4a, 0x83, 0xaf, 0x49, 0x48, 0x26, 0x34, 0xa0, 0xa1, 0x90, 0x23, 0x8a, 0x3f, 0xa2, 0xe8,
	0x39, 0x34, 0x12, 0x93, 0x6a, 0x6a, 0xbd, 0x93, 0x94, 0x9d, 0x39, 0x2d, 0xb7, 0x32, 0xed, 0x0d,
	0x17, 0xd0, 0x13, 0x58, 0x8b, 0x67, 0xe0, 0x85, 0x82, 0x39, 0x14, 0xaf, 0x28, 0x3c, 0x87, 0x6a,
	0xcc, 0xe7, 0xe8, 0x5e, 0xc2, 0x5b, 0x6a, 0x01, 0xad, 0x75, 0x53, 0x89, 0xe3, 0x02, 0xea, 0x03,
	0x8a, 0xb5, 0x32, 0xc3, 0xc7, 0x95, 0x1e, 0xef, 0x99, 0xca, 0x86, 0x38, 0x2e, 0xa0, 0x2e, 0x6c,
	0xad, 0xcc, 0xa6, 0xe8, 0x41, 0x2a, 0x7f, 0xe5, 0xd8, 0xba, 0x72, 0x82, 0x36, 0x80, 0xc6, 0xf3,
	0x06, 0xa7, 0x6e, 0x03, 0xe8, 0x5c, 0xab, 0x71, 0xc4, 0x84, 0x36, 0x6d, 0x8d, 0xad, 0x4c, 0x5b,
	0x4e, 0xa1, 0xcd, 0x2a, 0x98, 0xbd, 0x74, 0x45, 0x41, 0x43, 0xab, 0x5b, 0xfe, 0xf5, 0xd0, 0x2a,
	0x39, 0x13, 0x13, 0xe3, 0xfe, 0x2d, 0x63, 0xb2, 0x3c, 0xb6, 0xac, 0xb8, 0x7e, 0x01, 0xeb, 0x1d,
	0xcf, 0x93, 0x87, 0x3d, 0x61, 0x2a, 0xe2, 0xbb, 0x99, 0x31, 0x28, 0x37, 0xe4, 0x2f, 0xc0, 0x79,
	0xe5, 0x8f, 0xce, 0xa5, 0xd0, 0x41, 0xc4, 0x82, 0x9b, 0xa8, 0x3e, 0x83, 0x7a, 0x5c, 0x15, 0xef,
	0x0f, 0x51, 0xfb, 0xf7, 0x0a, 0x38, 0x43, 0xf5, 0x5d, 0xe9, 0x87, 0x93, 0xe4, 0xe6, 0x7f, 0x0e,
	0xf0, 0x92, 0x8a, 0xe4, 0xe8, 0xdb, 0x2b, 0xfd, 0xb3, 0x2f, 0x3f, 0x2f, 0x5b, 0x9b, 0x29, 0xa2,
	0x5a, 0x10, 0x17, 0xd0, 0x3e, 0xac, 0x67, 0x3e, 0x4b, 0x50, 0x2b, 0x0b, 0x5b, 0x06, 0xb2, 0x2b,
	0xf4, 0x3f, 0x53, 0x8e, 0x5f, 0xcf, 0x75, 0xca, 0xf2, 0x1c, 0xaf, 0x64, 0xec, 0xc6, 0x17, 0xe3,
	0xc6, 0x45, 0xda, 0x87, 0x7b, 0xea, 0x19, 0x1c, 0x52, 0xce, 0x7d, 0x16, 0xf6, 0x8c, 0x01, 0xc6,
	0x1c, 0x7d, 0xb4, 0x72, 0x4e, 0xdc, 0xb8, 0x80, 0x0e, 0xa0, 0xa9, 0x9f, 0xd0, 0x5b, 0xda, 0xd9,
	0x87, 0xff, 0x0d, 0x2f, 0xce, 0xa4, 0xee, 0x19, 0x1d, 0xf6, 0x06, 0x5d, 0x16, 0x04, 0x24, 0xf4,
	0x72, 0x01, 0xab, 0x1b, 0xa6, 0x71, 0xe1, 0xa9, 0x85, 0xba, 0x80, 0x52, 0xfd, 0xc5, 0x80, 0x95,
	0xa7, 0xbe, 0xb5, 0x32, 0x69, 0x29, 0x23, 0xfb, 0xe0, 0x0c, 0x69, 0xe8, 0xc9, 0x16, 0x93, 0xb6,
	0x2a, 0xc7, 0xf8, 0x22, 0xbb, 0xee, 0x10, 0x7d, 0xb8, 0x9b, 0x06, 0x91, 0x31, 0x92, 0x17, 0x87,
	0x69, 0x5c, 0x65, 0x43, 0x85, 0x71, 0x60, 0x98, 0xc9, 0xfc, 0x07, 0x90, 0x86, 0x9d, 0x7e, 0xe1,
	0xb7, 0xd2, 0x64, 0x9b, 0x82, 0xb8, 0xb0, 0x6b, 0x3d, 0xb5, 0xce, 0xf4, 0x9f, 0x29, 0xcf, 0xfe,
	0x09, 0x00, 0x00, 0xff, 0xff, 0x66, 0x06, 0xc3, 0xb1, 0x67, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoomManagementServiceClient is the client API for RoomManagementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomManagementServiceClient interface {
	RegisterUser(ctx context.Context, in *NewUserParam, opts ...grpc.CallOption) (*User, error)
	GetUser(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*User, error)
	GetUsers(ctx context.Context, in *PaginationParam, opts ...grpc.CallOption) (*Users, error)
	GetUserAccessToken(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*UserAccessToken, error)
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileParam, opts ...grpc.CallOption) (*User, error)
	RemoveUser(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*User, error)
	CreateRoom(ctx context.Context, in *NewRoomParam, opts ...grpc.CallOption) (*Room, error)
	GetRoom(ctx context.Context, in *GetRoomParam, opts ...grpc.CallOption) (*Room, error)
	GetRooms(ctx context.Context, in *PaginationParam, opts ...grpc.CallOption) (*Rooms, error)
	UpdateRoomProfile(ctx context.Context, in *UpdateRoomProfileParam, opts ...grpc.CallOption) (*Room, error)
	AddUserToRoom(ctx context.Context, in *UserRoomParam, opts ...grpc.CallOption) (*Room, error)
	KickUserFromRoom(ctx context.Context, in *UserRoomParam, opts ...grpc.CallOption) (*Room, error)
	DestroyRoom(ctx context.Context, in *GetRoomParam, opts ...grpc.CallOption) (*Room, error)
}

type roomManagementServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomManagementServiceClient(cc *grpc.ClientConn) RoomManagementServiceClient {
	return &roomManagementServiceClient{cc}
}

func (c *roomManagementServiceClient) RegisterUser(ctx context.Context, in *NewUserParam, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) GetUser(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) GetUsers(ctx context.Context, in *PaginationParam, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) GetUserAccessToken(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*UserAccessToken, error) {
	out := new(UserAccessToken)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/GetUserAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileParam, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/UpdateUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) RemoveUser(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/RemoveUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) CreateRoom(ctx context.Context, in *NewRoomParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/CreateRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) GetRoom(ctx context.Context, in *GetRoomParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/GetRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) GetRooms(ctx context.Context, in *PaginationParam, opts ...grpc.CallOption) (*Rooms, error) {
	out := new(Rooms)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/GetRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) UpdateRoomProfile(ctx context.Context, in *UpdateRoomProfileParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/UpdateRoomProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) AddUserToRoom(ctx context.Context, in *UserRoomParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/AddUserToRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) KickUserFromRoom(ctx context.Context, in *UserRoomParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/KickUserFromRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roomManagementServiceClient) DestroyRoom(ctx context.Context, in *GetRoomParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.RoomManagementService/DestroyRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomManagementServiceServer is the server API for RoomManagementService service.
type RoomManagementServiceServer interface {
	RegisterUser(context.Context, *NewUserParam) (*User, error)
	GetUser(context.Context, *GetUserParam) (*User, error)
	GetUsers(context.Context, *PaginationParam) (*Users, error)
	GetUserAccessToken(context.Context, *GetUserParam) (*UserAccessToken, error)
	UpdateUserProfile(context.Context, *UpdateUserProfileParam) (*User, error)
	RemoveUser(context.Context, *GetUserParam) (*User, error)
	CreateRoom(context.Context, *NewRoomParam) (*Room, error)
	GetRoom(context.Context, *GetRoomParam) (*Room, error)
	GetRooms(context.Context, *PaginationParam) (*Rooms, error)
	UpdateRoomProfile(context.Context, *UpdateRoomProfileParam) (*Room, error)
	AddUserToRoom(context.Context, *UserRoomParam) (*Room, error)
	KickUserFromRoom(context.Context, *UserRoomParam) (*Room, error)
	DestroyRoom(context.Context, *GetRoomParam) (*Room, error)
}

// UnimplementedRoomManagementServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoomManagementServiceServer struct {
}

func (*UnimplementedRoomManagementServiceServer) RegisterUser(ctx context.Context, req *NewUserParam) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedRoomManagementServiceServer) GetUser(ctx context.Context, req *GetUserParam) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedRoomManagementServiceServer) GetUsers(ctx context.Context, req *PaginationParam) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedRoomManagementServiceServer) GetUserAccessToken(ctx context.Context, req *GetUserParam) (*UserAccessToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAccessToken not implemented")
}
func (*UnimplementedRoomManagementServiceServer) UpdateUserProfile(ctx context.Context, req *UpdateUserProfileParam) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserProfile not implemented")
}
func (*UnimplementedRoomManagementServiceServer) RemoveUser(ctx context.Context, req *GetUserParam) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUser not implemented")
}
func (*UnimplementedRoomManagementServiceServer) CreateRoom(ctx context.Context, req *NewRoomParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRoom not implemented")
}
func (*UnimplementedRoomManagementServiceServer) GetRoom(ctx context.Context, req *GetRoomParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoom not implemented")
}
func (*UnimplementedRoomManagementServiceServer) GetRooms(ctx context.Context, req *PaginationParam) (*Rooms, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRooms not implemented")
}
func (*UnimplementedRoomManagementServiceServer) UpdateRoomProfile(ctx context.Context, req *UpdateRoomProfileParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRoomProfile not implemented")
}
func (*UnimplementedRoomManagementServiceServer) AddUserToRoom(ctx context.Context, req *UserRoomParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUserToRoom not implemented")
}
func (*UnimplementedRoomManagementServiceServer) KickUserFromRoom(ctx context.Context, req *UserRoomParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickUserFromRoom not implemented")
}
func (*UnimplementedRoomManagementServiceServer) DestroyRoom(ctx context.Context, req *GetRoomParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyRoom not implemented")
}

func RegisterRoomManagementServiceServer(s *grpc.Server, srv RoomManagementServiceServer) {
	s.RegisterService(&_RoomManagementService_serviceDesc, srv)
}

func _RoomManagementService_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUserParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).RegisterUser(ctx, req.(*NewUserParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).GetUser(ctx, req.(*GetUserParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaginationParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).GetUsers(ctx, req.(*PaginationParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_GetUserAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).GetUserAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/GetUserAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).GetUserAccessToken(ctx, req.(*GetUserParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserProfileParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/UpdateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).UpdateUserProfile(ctx, req.(*UpdateUserProfileParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_RemoveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).RemoveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/RemoveUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).RemoveUser(ctx, req.(*GetUserParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_CreateRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRoomParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).CreateRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/CreateRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).CreateRoom(ctx, req.(*NewRoomParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_GetRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).GetRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/GetRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).GetRoom(ctx, req.(*GetRoomParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_GetRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaginationParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).GetRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/GetRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).GetRooms(ctx, req.(*PaginationParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_UpdateRoomProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoomProfileParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).UpdateRoomProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/UpdateRoomProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).UpdateRoomProfile(ctx, req.(*UpdateRoomProfileParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_AddUserToRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoomParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).AddUserToRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/AddUserToRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).AddUserToRoom(ctx, req.(*UserRoomParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_KickUserFromRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRoomParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).KickUserFromRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/KickUserFromRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).KickUserFromRoom(ctx, req.(*UserRoomParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoomManagementService_DestroyRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomManagementServiceServer).DestroyRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.RoomManagementService/DestroyRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomManagementServiceServer).DestroyRoom(ctx, req.(*GetRoomParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomManagementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.RoomManagementService",
	HandlerType: (*RoomManagementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _RoomManagementService_RegisterUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _RoomManagementService_GetUser_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _RoomManagementService_GetUsers_Handler,
		},
		{
			MethodName: "GetUserAccessToken",
			Handler:    _RoomManagementService_GetUserAccessToken_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _RoomManagementService_UpdateUserProfile_Handler,
		},
		{
			MethodName: "RemoveUser",
			Handler:    _RoomManagementService_RemoveUser_Handler,
		},
		{
			MethodName: "CreateRoom",
			Handler:    _RoomManagementService_CreateRoom_Handler,
		},
		{
			MethodName: "GetRoom",
			Handler:    _RoomManagementService_GetRoom_Handler,
		},
		{
			MethodName: "GetRooms",
			Handler:    _RoomManagementService_GetRooms_Handler,
		},
		{
			MethodName: "UpdateRoomProfile",
			Handler:    _RoomManagementService_UpdateRoomProfile_Handler,
		},
		{
			MethodName: "AddUserToRoom",
			Handler:    _RoomManagementService_AddUserToRoom_Handler,
		},
		{
			MethodName: "KickUserFromRoom",
			Handler:    _RoomManagementService_KickUserFromRoom_Handler,
		},
		{
			MethodName: "DestroyRoom",
			Handler:    _RoomManagementService_DestroyRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "signalling.proto",
}

// SignalingServiceClient is the client API for SignalingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignalingServiceClient interface {
	GetProfile(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Profile, error)
	UpdateProfile(ctx context.Context, in *UpdateProfileParam, opts ...grpc.CallOption) (*Profile, error)
	GetMyRooms(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Rooms, error)
	GetRoom(ctx context.Context, in *GetRoomParam, opts ...grpc.CallOption) (*Room, error)
	GetUser(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*User, error)
	OfferSessionDescription(ctx context.Context, in *SDPParam, opts ...grpc.CallOption) (*empty.Empty, error)
	AnswerSessionDescription(ctx context.Context, in *SDPParam, opts ...grpc.CallOption) (*empty.Empty, error)
	SubscribeSDPCommand(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SignalingService_SubscribeSDPCommandClient, error)
	SubscribeRoomEvent(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SignalingService_SubscribeRoomEventClient, error)
	SendICECandidate(ctx context.Context, in *ICEParam, opts ...grpc.CallOption) (*empty.Empty, error)
	SubscribeICECandidate(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SignalingService_SubscribeICECandidateClient, error)
	SubscribeOnlineStatus(ctx context.Context, opts ...grpc.CallOption) (SignalingService_SubscribeOnlineStatusClient, error)
}

type signalingServiceClient struct {
	cc *grpc.ClientConn
}

func NewSignalingServiceClient(cc *grpc.ClientConn) SignalingServiceClient {
	return &signalingServiceClient{cc}
}

func (c *signalingServiceClient) GetProfile(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/GetProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) UpdateProfile(ctx context.Context, in *UpdateProfileParam, opts ...grpc.CallOption) (*Profile, error) {
	out := new(Profile)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/UpdateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) GetMyRooms(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Rooms, error) {
	out := new(Rooms)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/GetMyRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) GetRoom(ctx context.Context, in *GetRoomParam, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/GetRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) GetUser(ctx context.Context, in *GetUserParam, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) OfferSessionDescription(ctx context.Context, in *SDPParam, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/OfferSessionDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) AnswerSessionDescription(ctx context.Context, in *SDPParam, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/AnswerSessionDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) SubscribeSDPCommand(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SignalingService_SubscribeSDPCommandClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SignalingService_serviceDesc.Streams[0], "/protos.SignalingService/SubscribeSDPCommand", opts...)
	if err != nil {
		return nil, err
	}
	x := &signalingServiceSubscribeSDPCommandClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SignalingService_SubscribeSDPCommandClient interface {
	Recv() (*SDP, error)
	grpc.ClientStream
}

type signalingServiceSubscribeSDPCommandClient struct {
	grpc.ClientStream
}

func (x *signalingServiceSubscribeSDPCommandClient) Recv() (*SDP, error) {
	m := new(SDP)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *signalingServiceClient) SubscribeRoomEvent(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SignalingService_SubscribeRoomEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SignalingService_serviceDesc.Streams[1], "/protos.SignalingService/SubscribeRoomEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &signalingServiceSubscribeRoomEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SignalingService_SubscribeRoomEventClient interface {
	Recv() (*RoomEvent, error)
	grpc.ClientStream
}

type signalingServiceSubscribeRoomEventClient struct {
	grpc.ClientStream
}

func (x *signalingServiceSubscribeRoomEventClient) Recv() (*RoomEvent, error) {
	m := new(RoomEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *signalingServiceClient) SendICECandidate(ctx context.Context, in *ICEParam, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.SignalingService/SendICECandidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *signalingServiceClient) SubscribeICECandidate(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SignalingService_SubscribeICECandidateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SignalingService_serviceDesc.Streams[2], "/protos.SignalingService/SubscribeICECandidate", opts...)
	if err != nil {
		return nil, err
	}
	x := &signalingServiceSubscribeICECandidateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SignalingService_SubscribeICECandidateClient interface {
	Recv() (*ICEOffer, error)
	grpc.ClientStream
}

type signalingServiceSubscribeICECandidateClient struct {
	grpc.ClientStream
}

func (x *signalingServiceSubscribeICECandidateClient) Recv() (*ICEOffer, error) {
	m := new(ICEOffer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *signalingServiceClient) SubscribeOnlineStatus(ctx context.Context, opts ...grpc.CallOption) (SignalingService_SubscribeOnlineStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SignalingService_serviceDesc.Streams[3], "/protos.SignalingService/SubscribeOnlineStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &signalingServiceSubscribeOnlineStatusClient{stream}
	return x, nil
}

type SignalingService_SubscribeOnlineStatusClient interface {
	Send(*Heartbeat) error
	Recv() (*OnlineStatus, error)
	grpc.ClientStream
}

type signalingServiceSubscribeOnlineStatusClient struct {
	grpc.ClientStream
}

func (x *signalingServiceSubscribeOnlineStatusClient) Send(m *Heartbeat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *signalingServiceSubscribeOnlineStatusClient) Recv() (*OnlineStatus, error) {
	m := new(OnlineStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SignalingServiceServer is the server API for SignalingService service.
type SignalingServiceServer interface {
	GetProfile(context.Context, *empty.Empty) (*Profile, error)
	UpdateProfile(context.Context, *UpdateProfileParam) (*Profile, error)
	GetMyRooms(context.Context, *empty.Empty) (*Rooms, error)
	GetRoom(context.Context, *GetRoomParam) (*Room, error)
	GetUser(context.Context, *GetUserParam) (*User, error)
	OfferSessionDescription(context.Context, *SDPParam) (*empty.Empty, error)
	AnswerSessionDescription(context.Context, *SDPParam) (*empty.Empty, error)
	SubscribeSDPCommand(*empty.Empty, SignalingService_SubscribeSDPCommandServer) error
	SubscribeRoomEvent(*empty.Empty, SignalingService_SubscribeRoomEventServer) error
	SendICECandidate(context.Context, *ICEParam) (*empty.Empty, error)
	SubscribeICECandidate(*empty.Empty, SignalingService_SubscribeICECandidateServer) error
	SubscribeOnlineStatus(SignalingService_SubscribeOnlineStatusServer) error
}

// UnimplementedSignalingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSignalingServiceServer struct {
}

func (*UnimplementedSignalingServiceServer) GetProfile(ctx context.Context, req *empty.Empty) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProfile not implemented")
}
func (*UnimplementedSignalingServiceServer) UpdateProfile(ctx context.Context, req *UpdateProfileParam) (*Profile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfile not implemented")
}
func (*UnimplementedSignalingServiceServer) GetMyRooms(ctx context.Context, req *empty.Empty) (*Rooms, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyRooms not implemented")
}
func (*UnimplementedSignalingServiceServer) GetRoom(ctx context.Context, req *GetRoomParam) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoom not implemented")
}
func (*UnimplementedSignalingServiceServer) GetUser(ctx context.Context, req *GetUserParam) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedSignalingServiceServer) OfferSessionDescription(ctx context.Context, req *SDPParam) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OfferSessionDescription not implemented")
}
func (*UnimplementedSignalingServiceServer) AnswerSessionDescription(ctx context.Context, req *SDPParam) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnswerSessionDescription not implemented")
}
func (*UnimplementedSignalingServiceServer) SubscribeSDPCommand(req *empty.Empty, srv SignalingService_SubscribeSDPCommandServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeSDPCommand not implemented")
}
func (*UnimplementedSignalingServiceServer) SubscribeRoomEvent(req *empty.Empty, srv SignalingService_SubscribeRoomEventServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeRoomEvent not implemented")
}
func (*UnimplementedSignalingServiceServer) SendICECandidate(ctx context.Context, req *ICEParam) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendICECandidate not implemented")
}
func (*UnimplementedSignalingServiceServer) SubscribeICECandidate(req *empty.Empty, srv SignalingService_SubscribeICECandidateServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeICECandidate not implemented")
}
func (*UnimplementedSignalingServiceServer) SubscribeOnlineStatus(srv SignalingService_SubscribeOnlineStatusServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeOnlineStatus not implemented")
}

func RegisterSignalingServiceServer(s *grpc.Server, srv SignalingServiceServer) {
	s.RegisterService(&_SignalingService_serviceDesc, srv)
}

func _SignalingService_GetProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).GetProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/GetProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).GetProfile(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_UpdateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfileParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).UpdateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/UpdateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).UpdateProfile(ctx, req.(*UpdateProfileParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_GetMyRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).GetMyRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/GetMyRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).GetMyRooms(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_GetRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).GetRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/GetRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).GetRoom(ctx, req.(*GetRoomParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).GetUser(ctx, req.(*GetUserParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_OfferSessionDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SDPParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).OfferSessionDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/OfferSessionDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).OfferSessionDescription(ctx, req.(*SDPParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_AnswerSessionDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SDPParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).AnswerSessionDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/AnswerSessionDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).AnswerSessionDescription(ctx, req.(*SDPParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_SubscribeSDPCommand_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SignalingServiceServer).SubscribeSDPCommand(m, &signalingServiceSubscribeSDPCommandServer{stream})
}

type SignalingService_SubscribeSDPCommandServer interface {
	Send(*SDP) error
	grpc.ServerStream
}

type signalingServiceSubscribeSDPCommandServer struct {
	grpc.ServerStream
}

func (x *signalingServiceSubscribeSDPCommandServer) Send(m *SDP) error {
	return x.ServerStream.SendMsg(m)
}

func _SignalingService_SubscribeRoomEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SignalingServiceServer).SubscribeRoomEvent(m, &signalingServiceSubscribeRoomEventServer{stream})
}

type SignalingService_SubscribeRoomEventServer interface {
	Send(*RoomEvent) error
	grpc.ServerStream
}

type signalingServiceSubscribeRoomEventServer struct {
	grpc.ServerStream
}

func (x *signalingServiceSubscribeRoomEventServer) Send(m *RoomEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _SignalingService_SendICECandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ICEParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignalingServiceServer).SendICECandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SignalingService/SendICECandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignalingServiceServer).SendICECandidate(ctx, req.(*ICEParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _SignalingService_SubscribeICECandidate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SignalingServiceServer).SubscribeICECandidate(m, &signalingServiceSubscribeICECandidateServer{stream})
}

type SignalingService_SubscribeICECandidateServer interface {
	Send(*ICEOffer) error
	grpc.ServerStream
}

type signalingServiceSubscribeICECandidateServer struct {
	grpc.ServerStream
}

func (x *signalingServiceSubscribeICECandidateServer) Send(m *ICEOffer) error {
	return x.ServerStream.SendMsg(m)
}

func _SignalingService_SubscribeOnlineStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SignalingServiceServer).SubscribeOnlineStatus(&signalingServiceSubscribeOnlineStatusServer{stream})
}

type SignalingService_SubscribeOnlineStatusServer interface {
	Send(*OnlineStatus) error
	Recv() (*Heartbeat, error)
	grpc.ServerStream
}

type signalingServiceSubscribeOnlineStatusServer struct {
	grpc.ServerStream
}

func (x *signalingServiceSubscribeOnlineStatusServer) Send(m *OnlineStatus) error {
	return x.ServerStream.SendMsg(m)
}

func (x *signalingServiceSubscribeOnlineStatusServer) Recv() (*Heartbeat, error) {
	m := new(Heartbeat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SignalingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.SignalingService",
	HandlerType: (*SignalingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetProfile",
			Handler:    _SignalingService_GetProfile_Handler,
		},
		{
			MethodName: "UpdateProfile",
			Handler:    _SignalingService_UpdateProfile_Handler,
		},
		{
			MethodName: "GetMyRooms",
			Handler:    _SignalingService_GetMyRooms_Handler,
		},
		{
			MethodName: "GetRoom",
			Handler:    _SignalingService_GetRoom_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _SignalingService_GetUser_Handler,
		},
		{
			MethodName: "OfferSessionDescription",
			Handler:    _SignalingService_OfferSessionDescription_Handler,
		},
		{
			MethodName: "AnswerSessionDescription",
			Handler:    _SignalingService_AnswerSessionDescription_Handler,
		},
		{
			MethodName: "SendICECandidate",
			Handler:    _SignalingService_SendICECandidate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeSDPCommand",
			Handler:       _SignalingService_SubscribeSDPCommand_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeRoomEvent",
			Handler:       _SignalingService_SubscribeRoomEvent_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeICECandidate",
			Handler:       _SignalingService_SubscribeICECandidate_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeOnlineStatus",
			Handler:       _SignalingService_SubscribeOnlineStatus_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "signalling.proto",
}
